@using Google.Cloud.Firestore;
@using StudySprout.Models

@page "/MyStudySets"
@attribute [StreamRendering]
@inject NavigationManager Navigation

<PageTitle>MY STUDY SETS</PageTitle>

<h1>MY STUDY SETS.</h1>
<p>READY, SET, STUDY!</p>

<style>
    body, html {
        margin: 0;
        padding: 0;
        font-family: 'Arial', sans-serif;
        box-sizing: border-box;
    }

    * {
        box-sizing: inherit;
    }

    body {
        background-color: #f4f7fa;
        color: #333;
        line-height: 1.6;
        font-size: 16px;
        min-height: 100vh;
        display: flex;
        flex-direction: column;
    }

    main {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        flex-grow: 1;
    }

    h1, h2, h3 {
        text-align: center;
        color: #4e7429;
        margin-top: 20px;
    }

    h1 {
        font-size: 2.5rem;
        margin-bottom: 10px;
    }

    ul {
        list-style: none;
        padding: 0;
    }

    ul li {
        background: #fff;
        margin: 10px 0;
        padding: 15px;
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    ul li h3 {
        margin:  0;
        color:  #555;
        font-size: 1rem;
    }

    .alert {
        padding: 12px;
        border-radius: 5px;
        margin-top: 10px;
        text-align: center;
        font-size: 1rem;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }
</style>

<!-- Debugging Section -->
@foreach (var set in sets)
{
    <div>
        <p>Debug: TITLE=@set.TITLE, DESCRIPTION=@set.DESCRIPTION, LEARNBY=@set.LEARNBY</p>
    </div>
}

@if (isError)
{
    <p class="alert alert-danger">@errorMessage</p>
}

@code
{
    private FirestoreDb StudySproutDB;
    public List<StudySet> sets { get; set; } = new List<StudySet>();
    public bool isError { get; set; }
    public string errorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("Initializing Firestore");
        try
        {
            StudySproutDB = FirestoreDb.Create("studysprout-67ec9");
            await LoadStudySets();
        }
        catch (Exception ex)
        {
            isError = true;
            errorMessage = $"Error initializing Firestore: {ex.Message}";
            Console.WriteLine(errorMessage);
        }
        StateHasChanged();
    }

    private async Task LoadStudySets()
    {
        try
        {
            Console.WriteLine("Loading study sets from Firestore...");
            CollectionReference studySetsCollection = StudySproutDB.Collection("MyStudySetsDB");
            QuerySnapshot snapshot = await studySetsCollection.GetSnapshotAsync();

            sets.Clear();

            foreach (DocumentSnapshot document in snapshot.Documents)
            {
                if (document.Exists)
                {
                    Console.WriteLine($"Document ID: {document.Id}");
                    foreach (var field in document.ToDictionary())
                    {
                        Console.WriteLine($"{field.Key}: {field.Value}");
                    }
                    var data = document.ConvertTo<StudySet>();
                    sets.Add(data);
                    StateHasChanged();
                    Console.WriteLine($"Added to sets: TITLE={data.TITLE}, DESCRIPTION={data.DESCRIPTION}, LEARNBY={data.LEARNBY}");
                }
            }
            Console.WriteLine($"Total sets: {sets.Count}");
            Console.WriteLine("Study sets loaded successfully.");
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading study sets: {ex.Message}");
            isError = true;
            errorMessage = $"An error occurred while loading study sets: {ex.Message}";
            StateHasChanged();
        }
    }
}

@if (sets == null || sets.Count == 0)
{
    if (!isError)
    {
        <p>Loading study sets...</p>
    }
    else
    {
        <p class="alert alert-danger">@errorMessage</p>
    }
}
else
{
    <ul>
        @foreach (var set in sets)
        {
            <li>
                <h3>@set.TITLE</h3>
                <p>@set.DESCRIPTION</p>
                <p><strong>LEARN BY:</strong> @set.LEARNBY.ToString("MMMM d, yyyy")</p>
            </li>
        }
    </ul>
}